<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.finance.mapper.InfoMapper">
  <resultMap id="BaseResultMap" type="com.bjpowernode.finance.entity.Info">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sendId" jdbcType="INTEGER" property="sendid" />
    <result column="receiveId" jdbcType="INTEGER" property="receiveid" />
    <result column="createTime" jdbcType="DATE" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="infoDesc" jdbcType="VARCHAR" property="infodesc" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <resultMap id="BaseResultMapWithUserAndAdmin" type="com.bjpowernode.finance.entity.Info">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sendId" jdbcType="INTEGER" property="sendid" />
    <result column="receiveId" jdbcType="INTEGER" property="receiveid" />
    <result column="createTime" jdbcType="DATE" property="createtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="infoDesc" jdbcType="VARCHAR" property="infodesc" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <!-- 指定联合查询用户字段的封装 -->
    <association property="user"
                 javaType="com.bjpowernode.finance.entity.User">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="realname" jdbcType="VARCHAR" property="realname" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="IDcard" jdbcType="VARCHAR" property="idcard" />
      <result column="phone" jdbcType="VARCHAR" property="phone" />
      <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="paypwd" jdbcType="INTEGER" property="paypwd" />
      <result column="status" jdbcType="INTEGER" property="status" />
      <result column="reputation" jdbcType="VARCHAR" property="reputation" />
    </association>
    <!-- 指定联合查询管理员字段的封装 -->
    <association property="admin"
                 javaType="com.bjpowernode.finance.entity.Admin">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="status" jdbcType="INTEGER" property="status" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sendId, receiveId, createTime, title, infoDesc, status
  </sql>
  <sql id="Base_Column_List_With_User_And_Admin">
    i.id, i.sendId, i.receiveId, i.createTime, i.title, i.infoDesc, i.status,
    u.id, u.username, u.realname, u.password, u.IDcard, u.phone, u.email, u.paypwd, u.status, u.reputation,
    a.id, a.username, a.password, a.status
  </sql>

  <select id="selectByExampleWithUserAndAdmin" parameterType="com.bjpowernode.finance.entity.InfoExample" resultMap="BaseResultMapWithUserAndAdmin">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_With_User_And_Admin" />
    from info i left join user u on i.receiveId=u.id left join admin a on i.sendId=a.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithUserAndAdmin" parameterType="java.lang.Integer" resultMap="BaseResultMapWithUserAndAdmin">
    select
    <include refid="Base_Column_List_With_User_And_Admin" />
    from info i left join user u on i.receiveId=u.id left join admin a on i.sendId=a.id
    where i.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByExample" parameterType="com.bjpowernode.finance.entity.InfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bjpowernode.finance.entity.InfoExample">
    delete from info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bjpowernode.finance.entity.Info">
    insert into info (id, sendId, receiveId, 
      createTime, title, infoDesc, 
      status)
    values (#{id,jdbcType=INTEGER}, #{sendid,jdbcType=INTEGER}, #{receiveid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=DATE}, #{title,jdbcType=VARCHAR}, #{infodesc,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bjpowernode.finance.entity.Info">
    insert into info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sendid != null">
        sendId,
      </if>
      <if test="receiveid != null">
        receiveId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="infodesc != null">
        infoDesc,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sendid != null">
        #{sendid,jdbcType=INTEGER},
      </if>
      <if test="receiveid != null">
        #{receiveid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="infodesc != null">
        #{infodesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjpowernode.finance.entity.InfoExample" resultType="java.lang.Long">
    select count(*) from info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sendid != null">
        sendId = #{record.sendid,jdbcType=INTEGER},
      </if>
      <if test="record.receiveid != null">
        receiveId = #{record.receiveid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.infodesc != null">
        infoDesc = #{record.infodesc,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info
    set id = #{record.id,jdbcType=INTEGER},
      sendId = #{record.sendid,jdbcType=INTEGER},
      receiveId = #{record.receiveid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=DATE},
      title = #{record.title,jdbcType=VARCHAR},
      infoDesc = #{record.infodesc,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.finance.entity.Info">
    update info
    <set>
      <if test="sendid != null">
        sendId = #{sendid,jdbcType=INTEGER},
      </if>
      <if test="receiveid != null">
        receiveId = #{receiveid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="infodesc != null">
        infoDesc = #{infodesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.finance.entity.Info">
    update info
    set sendId = #{sendid,jdbcType=INTEGER},
      receiveId = #{receiveid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      infoDesc = #{infodesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>