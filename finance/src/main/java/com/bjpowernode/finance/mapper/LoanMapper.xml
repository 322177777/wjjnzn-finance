<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.finance.mapper.LoanMapper">
  <resultMap id="BaseResultMap" type="com.bjpowernode.finance.entity.Loan">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loanId" jdbcType="INTEGER" property="loanid" />
    <result column="examineId" jdbcType="INTEGER" property="examineid" />
    <result column="loanTime" jdbcType="DATE" property="loantime" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="term" jdbcType="INTEGER" property="term" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="applyStatus" jdbcType="INTEGER" property="applystatus" />
    <result column="loanStatus" jdbcType="INTEGER" property="loanstatus" />
  </resultMap>

  <resultMap id="BaseResultMapWithUserAndAdmin" type="com.bjpowernode.finance.entity.Loan">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="loanId" jdbcType="INTEGER" property="loanid" />
    <result column="examineId" jdbcType="INTEGER" property="examineid" />
    <result column="loanTime" jdbcType="DATE" property="loantime" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="term" jdbcType="INTEGER" property="term" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="applyStatus" jdbcType="INTEGER" property="applystatus" />
    <result column="loanStatus" jdbcType="INTEGER" property="loanstatus" />
    <!-- 指定联合查询用户字段的封装 -->
    <association property="user"
                 javaType="com.bjpowernode.finance.entity.User">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="realname" jdbcType="VARCHAR" property="realname" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="IDcard" jdbcType="VARCHAR" property="idcard" />
      <result column="phone" jdbcType="VARCHAR" property="phone" />
      <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="paypwd" jdbcType="INTEGER" property="paypwd" />
      <result column="status" jdbcType="INTEGER" property="status" />
      <result column="reputation" jdbcType="VARCHAR" property="reputation" />
    </association>
    <!-- 指定联合查询管理员字段的封装 -->
    <association property="admin"
                 javaType="com.bjpowernode.finance.entity.Admin">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="status" jdbcType="INTEGER" property="status" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, loanId, examineId, loanTime, amount, term, rate, applyStatus, loanStatus
  </sql>
  <sql id="Base_Column_List_With_User_And_Admin">
    l.id, l.loanId, l.examineId, l.loanTime, l.amount, l.term, l.rate, l.applyStatus, l.loanStatus,
    u.id, u.username, u.realname, u.password, u.IDcard, u.phone, u.email, u.paypwd, u.status, u.reputation,
    a.id, a.username, a.password, a.status
  </sql>

  <select id="selectByExampleWithUserAndAdmin" parameterType="com.bjpowernode.finance.entity.LoanExample" resultMap="BaseResultMapWithUserAndAdmin">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_With_User_And_Admin" />
    from loan l left join user u on l.loanId=u.id left join admin a on l.examineId=a.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithUserAndAdmin" parameterType="java.lang.Integer" resultMap="BaseResultMapWithUserAndAdmin">
    select
    <include refid="Base_Column_List_With_User_And_Admin" />
    from loan l left join user u on l.loanId=u.id left join admin a on l.examineId=a.id
    where l.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByExample" parameterType="com.bjpowernode.finance.entity.LoanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from loan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bjpowernode.finance.entity.LoanExample">
    delete from loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bjpowernode.finance.entity.Loan">
    insert into loan (id, loanId, examineId, 
      loanTime, amount, term, 
      rate, applyStatus, loanStatus
      )
    values (#{id,jdbcType=INTEGER}, #{loanid,jdbcType=INTEGER}, #{examineid,jdbcType=INTEGER}, 
      #{loantime,jdbcType=DATE}, #{amount,jdbcType=DECIMAL}, #{term,jdbcType=INTEGER}, 
      #{rate,jdbcType=DECIMAL}, #{applystatus,jdbcType=INTEGER}, #{loanstatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjpowernode.finance.entity.Loan">
    insert into loan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loanid != null">
        loanId,
      </if>
      <if test="examineid != null">
        examineId,
      </if>
      <if test="loantime != null">
        loanTime,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="applystatus != null">
        applyStatus,
      </if>
      <if test="loanstatus != null">
        loanStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loanid != null">
        #{loanid,jdbcType=INTEGER},
      </if>
      <if test="examineid != null">
        #{examineid,jdbcType=INTEGER},
      </if>
      <if test="loantime != null">
        #{loantime,jdbcType=DATE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="term != null">
        #{term,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="applystatus != null">
        #{applystatus,jdbcType=INTEGER},
      </if>
      <if test="loanstatus != null">
        #{loanstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjpowernode.finance.entity.LoanExample" resultType="java.lang.Long">
    select count(*) from loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update loan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loanid != null">
        loanId = #{record.loanid,jdbcType=INTEGER},
      </if>
      <if test="record.examineid != null">
        examineId = #{record.examineid,jdbcType=INTEGER},
      </if>
      <if test="record.loantime != null">
        loanTime = #{record.loantime,jdbcType=DATE},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.applystatus != null">
        applyStatus = #{record.applystatus,jdbcType=INTEGER},
      </if>
      <if test="record.loanstatus != null">
        loanStatus = #{record.loanstatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update loan
    set id = #{record.id,jdbcType=INTEGER},
      loanId = #{record.loanid,jdbcType=INTEGER},
      examineId = #{record.examineid,jdbcType=INTEGER},
      loanTime = #{record.loantime,jdbcType=DATE},
      amount = #{record.amount,jdbcType=DECIMAL},
      term = #{record.term,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DECIMAL},
      applyStatus = #{record.applystatus,jdbcType=INTEGER},
      loanStatus = #{record.loanstatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.finance.entity.Loan">
    update loan
    <set>
      <if test="loanid != null">
        loanId = #{loanid,jdbcType=INTEGER},
      </if>
      <if test="examineid != null">
        examineId = #{examineid,jdbcType=INTEGER},
      </if>
      <if test="loantime != null">
        loanTime = #{loantime,jdbcType=DATE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="applystatus != null">
        applyStatus = #{applystatus,jdbcType=INTEGER},
      </if>
      <if test="loanstatus != null">
        loanStatus = #{loanstatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.finance.entity.Loan">
    update loan
    set loanId = #{loanid,jdbcType=INTEGER},
      examineId = #{examineid,jdbcType=INTEGER},
      loanTime = #{loantime,jdbcType=DATE},
      amount = #{amount,jdbcType=DECIMAL},
      term = #{term,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      applyStatus = #{applystatus,jdbcType=INTEGER},
      loanStatus = #{loanstatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>